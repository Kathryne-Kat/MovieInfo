{"version":3,"file":"static/js/759.020ad5f3.chunk.js","mappings":"2UAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,KAHkB,uBACvBK,EADuB,EACvBA,KADuB,kBAOxBA,EAAKC,SAPmB,2CAAH,qDAUjBC,EAAgB,mCAAG,sGACPL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,qBAA0C,CAC/DI,OAAQ,CACNC,QAASJ,KAHiB,uBACtBK,EADsB,EACtBA,KADsB,kBAOvBA,EAAKC,SAPkB,2CAAH,qDAUhBE,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTS,MAAAA,KAJyB,uBACrBJ,EADqB,EACrBA,KADqB,kBAQtBA,EAAKC,SARiB,2CAAH,sDAWfI,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BY,GAAM,CACzDR,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfO,EAAe,mCAAG,WAAMC,GAAN,yFACNX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bc,EAA9B,YAAiD,CACtEV,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKS,MAPiB,2CAAH,sDAUfC,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8Bc,EAA9B,YAAiD,CACtEV,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD,sJCtDfU,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnC,OACE,gBAAIC,UAAU,GAAd,WACE,qCAAaF,MACb,uBAAIC,MAGT,E,UCNYE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OAAuB,IAAnBA,EAAQC,OACH,8CAGL,eAAIH,UAAU,GAAd,SACGE,GACCA,EAAQE,KAAI,SAAAC,GAAM,OAAI,SAACR,GAAD,UAAgCQ,GAAfA,EAAOb,GAA5B,KAI3B,EACDS,EAAYK,SAAW,CACrBC,M,MAAOC,GAAAA,Q,wBC8BT,EAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QA4BR,OA1BAqB,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,YAAU,WACR,GAAKtB,EAAL,CACA,IAAMuB,EAAU,mCAAG,oGAEfL,GAAW,GAFI,UAGIhB,EAAAA,EAAAA,IAAgBF,GAHpB,OAGTR,EAHS,OAIfwB,EAAWxB,GAGX4B,EAAS,MAPM,gDASfA,EAAS,KAAMI,SATA,yBAWfN,GAAW,GAXI,4EAAH,qDAchBK,GAfoB,CAgBrB,GAAE,CAACvB,KAEJsB,EAAAA,EAAAA,YAAU,WACHH,GACLM,MAAMN,EACP,GAAE,CAACA,KAIF,gCACGX,IAAW,SAACD,EAAD,CAAaC,QAASA,IACjCS,IAAW,SAACS,EAAA,EAAD,MAGjB,C","sources":["api/movies-service.js","components/ReviewsList/ReviewItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getPopularMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n","import PropTypes from 'prop-types';\n\nexport const ReviewItem = ({ author, content }) => {\n  return (\n    <li className=\"\">\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { ReviewItem } from './ReviewItem';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return 'We don`t have any reviews for this movie. ';\n  } else {\n    return (\n      <ul className=\"\">\n        {reviews &&\n          reviews.map(review => <ReviewItem key={review.id} {...review} />)}\n      </ul>\n    );\n  }\n};\nReviewsList.propType = {\n  movie: PropTypes.object,\n};\n","import { getMovieReviews } from 'api/movies-service';\nimport { Loader } from 'components/Loader';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const getReviews = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n        //console.log(data);\n\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n  // console.log(reviews);\n\n  return (\n    <>\n      {reviews && <ReviewsList reviews={reviews} />}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getPopularMovies","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","ReviewItem","author","content","className","ReviewsList","reviews","length","map","review","propType","movie","PropTypes","useState","setReviews","loading","setLoading","error","setError","useParams","useEffect","getReviews","message","alert","Loader"],"sourceRoot":""}