{"version":3,"file":"static/js/318.db0e5a8a.chunk.js","mappings":"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","sources":["api/movies-service.js","webpack://react-homework-template/./src/components/MoviesList/moviesList.module.css?9068","components/MoviesList/MovieCard.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/serchForm.module.css?f0d7","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getPopularMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/all/week`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"moviesList_container__kqJys\",\"poster\":\"moviesList_poster__hGfPY\",\"moviesList\":\"moviesList_moviesList__A7Eqi\",\"title\":\"moviesList_title__UDpFK\",\"titleList\":\"moviesList_titleList__mihWC\",\"posterImg\":\"moviesList_posterImg__MDOee\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport notImag from 'img/pngwing.com (3).png';\n\nimport css from './moviesList.module.css';\n\nexport const MovieCard = ({ id, title, poster_path }) => {\n  const location = useLocation();\n  const poster = `https://image.tmdb.org/t/p/w200${poster_path}`;\n  return (\n    <li className={css.poster}>\n      <Link to={'/movies/' + id} state={{ from: location }}>\n        <img\n          className={css.posterImg}\n          src={!poster_path ? notImag : poster}\n          alt={title}\n        />\n        <h2 className={css.title}>{title}</h2>\n      </Link>\n    </li>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MovieCard } from './MovieCard';\nimport css from './moviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  //console.log(movies);\n  return (\n    <div className={css.container}>\n   \n      <ul className={css.moviesList}>\n        {movies && movies.map(movie => <MovieCard key={movie.id} {...movie} />)}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propType = {\n  movie: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"serchForm_container__8-goi\",\"titleList\":\"serchForm_titleList__dbKET\",\"form\":\"serchForm_form__hvseB\",\"inputSearch\":\"serchForm_inputSearch__pxLEH\",\"btnSearch\":\"serchForm_btnSearch__JyfRa\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './serchForm.module.css';\n\nexport const SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  //console.log(searchParams);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const query = e.target.query.value.toLowerCase().trim();\n    console.log(query);\n    if (!query) return;\n    setSearchParams({ search: query });\n  };\n\n  return (\n    <div className={css.container}>\n      {/* <h1 className={css.titleList}>Search Movies </h1> */}\n      <form className={css.form} onSubmit={onSubmit}>\n        <input\n          className={css.inputSearch}\n          type=\"text\"\n          placeholder=\"Enter movie\"\n          name=\"query\"\n        />\n        <button className={css.btnSearch} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { getMovieByQuery } from 'api/movies-service';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPopularMovies } from '../api/movies-service';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('search');\n\n  //console.log(setSearchParams);\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        setLoading(true);\n        const data = await getPopularMovies();\n        setMovies(data);\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrending();\n  }, []);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieByQuery(query);\n        setMovies(data);\n        //console.log(data);\n\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [query]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  return (\n    <>\n      <section>\n        <SearchForm />\n        {!!movies?.length && <MoviesList movies={movies} />}\n      </section>\n      {loading && <Loader />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getPopularMovies","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","MovieCard","title","poster_path","location","useLocation","poster","className","css","to","state","from","src","notImag","alt","MoviesList","movies","map","movie","propType","PropTypes","SearchForm","useSearchParams","setSearchParams","onSubmit","e","preventDefault","target","value","toLowerCase","trim","console","log","search","type","placeholder","name","useState","setMovies","loading","setLoading","error","setError","get","useEffect","getTrending","message","getMovies","alert","length","Loader"],"sourceRoot":""}