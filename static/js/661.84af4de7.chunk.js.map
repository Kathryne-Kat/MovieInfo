{"version":3,"file":"static/js/661.84af4de7.chunk.js","mappings":"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","sources":["api/movies-service.js","webpack://react-homework-template/./src/components/MovieInfo/movieInfo.module.css?d0c0","components/Btn/BtnBack.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movieInfo_container__xbZJJ\",\"flexContainer\":\"movieInfo_flexContainer__dneTw\",\"btnBack\":\"movieInfo_btnBack__pAxm9\",\"titleList\":\"movieInfo_titleList__hNsHV\",\"content\":\"movieInfo_content__DVoGF\",\"title\":\"movieInfo_title__vNEU2\",\"overview\":\"movieInfo_overview__DVRTW\",\"additional\":\"movieInfo_additional__3ew2K\",\"link\":\"movieInfo_link__On5Ud\"};","import { Link } from 'react-router-dom';\nimport css from '../MovieInfo/movieInfo.module.css';\n\nexport const BtnBack = ({ path }) => {\n  return (\n    <button className={css.btnBack}>\n      <Link to={path}>Back</Link>\n    </button>\n  );\n};\n","// import { Cast } from 'pages/Cast';\n// import { Reviews } from 'pages/Reviews';\nimport { lazy, Suspense } from 'react';\nimport { NavLink, Route, Routes, useLocation } from 'react-router-dom';\nimport css from './movieInfo.module.css';\n\nconst LazyCast = lazy(() => import('pages/Cast'));\nconst LazyReviews = lazy(() => import('pages/Reviews'));\n\nexport const MovieInfo = ({\n  title,\n  poster_path,\n  overview,\n  vote_average,\n  genres,\n  release_date,\n}) => {\n  const year = release_date;\n  const location = useLocation();\n  const backPath = location.state?.from ?? '/';\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <div className={css.container}>\n      {/* <h1 className={css.titleList}>Movie Details</h1> */}\n      <div className={css.flexContainer}>\n        <img\n          className={css.poster}\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt=\"title\"\n        />\n        <div className={css.content}>\n          <h2 className={css.title}>\n            {title} ({year.slice(0, 4)})\n          </h2>\n\n          <p>Vote average: {vote_average}</p>\n\n          <h3 className={css.overview}>Overview</h3>\n          <p>{overview}</p>\n          <h3 className={css.overview}>Genres</h3>\n          <p>{movieGenres}</p>\n        </div>\n      </div>\n      <div className={css.additional}>\n        <p className={css.add}>Additional information</p>\n        <ul>\n          <li className={css.link}>\n            <NavLink to=\"cast\" state={{ from: backPath }}>\n              Cast\n            </NavLink>\n          </li>\n          <li className={css.link}>\n            <NavLink to=\"reviews\" state={{ from: backPath }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<LazyCast />} />\n          <Route path=\"reviews\" element={<LazyReviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n","import { getMovieDetails } from 'api/movies-service';\nimport { BtnBack } from 'components/Btn/BtnBack';\nimport { Loader } from 'components/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        //console.log(data);\n        setMovie(data);\n\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  const backPath = location.state?.from ?? '/';\n  return (\n    <>\n      <BtnBack path={backPath} />\n      {movie && <MovieInfo {...movie} />}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","BtnBack","path","className","css","to","LazyCast","lazy","LazyReviews","MovieInfo","title","poster_path","overview","vote_average","genres","year","release_date","backPath","useLocation","state","from","movieGenres","map","genre","name","join","src","alt","slice","Suspense","element","useState","movie","setMovie","loading","setLoading","error","setError","useParams","location","useEffect","getMovie","message","alert","Loader"],"sourceRoot":""}