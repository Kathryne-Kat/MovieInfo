{"version":3,"file":"static/js/945.a04fb500.chunk.js","mappings":"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","sources":["api/movies-service.js","components/Btn/BtnBack.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '25e4eeadea4cf520d825a9bf9fd0e85d';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data.results;\n};\n","import { Link } from 'react-router-dom';\n\nexport const BtnBack = ({ path }) => {\n  return (\n    <button>\n      <Link to={path}>Back</Link>\n    </button>\n  );\n};\n","// import { Cast } from 'pages/Cast';\n// import { Reviews } from 'pages/Reviews';\nimport { lazy, Suspense } from 'react';\nimport { NavLink, Route, Routes } from 'react-router-dom';\n\nconst LazyCast = lazy(() => import('pages/Cast'));\nconst LazyReviews = lazy(() => import('pages/Reviews'));\n\nexport const MovieInfo = ({\n  title,\n  poster_path,\n  overview,\n  vote_average,\n  genres,\n  release_date,\n}) => {\n  const year = release_date;\n\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <>\n      <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"title\" />\n      <h2>{title}</h2>\n      <span>{year.slice(0, 4)}</span>\n      <p>Vote average: {vote_average}</p>\n\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{movieGenres}</p>\n      <p>Additional information</p>\n      <NavLink to=\"cast\">Cast</NavLink>\n      <NavLink to=\"reviews\">Reviews</NavLink>\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<LazyCast />} />\n          <Route path=\"reviews\" element={<LazyReviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n","import { getMovieDetails } from 'api/movies-service';\nimport { BtnBack } from 'components/Btn/BtnBack';\nimport { Loader } from 'components/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        //console.log(data);\n        setMovie(data);\n\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  const backPath = location.state?.from ?? '/';\n  return (\n    <>\n      <h1>Movie Details</h1>\n      <BtnBack path={backPath} />\n      {movie && <MovieInfo {...movie} />}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","data","results","getMovieByQuery","query","getMovieDetails","id","getMovieCredits","movieId","cast","getMovieReviews","BtnBack","path","to","LazyCast","lazy","LazyReviews","MovieInfo","title","poster_path","overview","vote_average","genres","year","release_date","movieGenres","map","genre","name","join","src","alt","slice","Suspense","element","useState","movie","setMovie","loading","setLoading","error","setError","useParams","location","useLocation","useEffect","getMovie","message","alert","backPath","state","from","Loader"],"sourceRoot":""}